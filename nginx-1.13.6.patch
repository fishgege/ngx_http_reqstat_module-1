diff --git a/src/core/ngx_connection.h b/src/core/ngx_connection.h
index e4dfe58..9250982 100644
--- a/src/core/ngx_connection.h
+++ b/src/core/ngx_connection.h
@@ -133,6 +133,7 @@ struct ngx_connection_s {
     ngx_listening_t    *listening;
 
     off_t               sent;
+    off_t               received;
 
     ngx_log_t          *log;
 
@@ -189,6 +190,9 @@ struct ngx_connection_s {
 #if (NGX_THREADS || NGX_COMPAT)
     ngx_thread_task_t  *sendfile_task;
 #endif
+	 
+	time_t start_sec;
+    ngx_msec_t start_msec;
 };
 
 
diff --git a/src/http/ngx_http_request.c b/src/http/ngx_http_request.c
index 0de8ace..afd8106 100644
--- a/src/http/ngx_http_request.c
+++ b/src/http/ngx_http_request.c
@@ -222,6 +222,11 @@ ngx_http_init_connection(ngx_connection_t *c)
 
     c->data = hc;
 
+	// 连接开始的地儿
+	ngx_time_t *tp = ngx_timeofday();
+    c->start_sec = tp->sec;
+    c->start_msec = tp->msec;
+	
     /* find the server configuration for the address:port */
 
     port = c->listening->servers;
@@ -471,6 +476,7 @@ ngx_http_wait_request_handler(ngx_event_t *rev)
     }
 
     b->last += n;
+    c->received += n;
 
     if (hc->proxy_protocol) {
         hc->proxy_protocol = 0;
@@ -521,7 +527,15 @@ ngx_http_create_request(ngx_connection_t *c)
     ngx_http_core_main_conf_t  *cmcf;
 
     c->requests++;
-
+	
+	// HTTP请求开始的地儿
+	if (c->requests <= 1) {
+		 tp = ngx_timeofday();
+		 ngx_msec_int_t  ms = (ngx_msec_int_t)((tp->sec - c->start_sec) * 1000 + (tp->msec - c->start_msec));
+		 c->start_msec = ngx_max(ms, 0);
+		 c->start_sec = 0;
+	}
+	
     hc = c->data;
 
     cscf = ngx_http_get_module_srv_conf(hc->conf_ctx, ngx_http_core_module);
@@ -1449,7 +1463,8 @@ ngx_http_read_request_header(ngx_http_request_t *r)
     }
 
     r->header_in->last += n;
-
+    c->received += n;
+ 
     return n;
 }
 
@@ -2995,6 +3010,8 @@ ngx_http_set_keepalive(ngx_http_request_t *r)
 
         c->data = r;
 
+        /* bytes in the buffer have already been counted */
+        c->received = 0;
         c->sent = 0;
         c->destroyed = 0;
 
@@ -3233,6 +3250,7 @@ ngx_http_keepalive_handler(ngx_event_t *rev)
     }
 
     c->sent = 0;
+    c->received = n;
     c->destroyed = 0;
 
     ngx_del_timer(rev);
@@ -3324,6 +3342,7 @@ ngx_http_lingering_close_handler(ngx_event_t *rev)
             return;
         }
 
+	c->received += n;
     } while (rev->ready);
 
     if (ngx_handle_read_event(rev, 0) != NGX_OK) {
